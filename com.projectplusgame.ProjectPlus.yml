app-id: com.projectplusgame.ProjectPlus
runtime: org.kde.Platform
runtime-version: '6.9'
sdk: org.kde.Sdk
# command: ishiiruka-wrapper
# rename-desktop-file: faster-project-plus.desktop
# rename-icon: ishiiruka
finish-args:
  # - --allow=multiarch                                      # Access to 32bit libraries (For running 32bit executables)
  # - --allow=devel                                          # Uses full SDK as the runtime (Access to more debugging tools and other libs)
  - --allow=bluetooth                                      # Access to bluetooth (Required for the emulated bluetooth adapter feature)
  - --device=all                                           # Access to all devices
  # - --device=dri                                           # Access to DRI for OpenGL rendering
  # - --device=input                                         # Access to input devices (Controllers, etc)
  # - --socket=wayland                                       # Access to Wayland socket for display
  - --socket=fallback-x11                                  # Access to X11 socket for display (Incase wayland doesn't work)
  - --socket=pulseaudio                                    # Access to pulse audio socket for sound
  - --share=network                                        # Access to networking
  - --share=ipc                                            # Access to host IPC namespace
  - --talk-name=org.freedesktop.ScreenSaver                # Can talk to Screensaver (Allows preventing Screensaver)
  # - --system-talk-name=org.freedesktop.UDisks2             # Can manage storage devices directly
  # - --system-talk-name=org.freedesktop.NetworkManager      # Can manage network directly
  - --filesystem=host:ro                                   # Read access to common host directories
  - --filesystem=xdg-run/app/com.discordapp.Discord:create # Read/write access to Discord's running instance (Required for setting up Discord rich presence)
  # - --filesystem=xdg-run/discord-ipc-0:create              # Read/Write access to Discord's IPC socket (Required for setting up Discord rich presence)
  - --filesystem=xdg-run/gamescope-0:ro                    # Read access to Gamescope's running instance (Required for Gamescope on Steam Deck)
  - --env=QT_QPA_PLATFORM=xcb
modules:
  - shared-modules/libusb/libusb.json
  - name: libusb

  # For motion controls on non-wii controllers (Switch, PS4, etc) (Requires a udev rule enabling Motion Sensors access)
  - name: libevdev
    buildsystem: meson
    config-opts:
      - -Dtests=disabled
      - -Ddocumentation=disabled
    sources:
      - type: archive
        url: https://www.freedesktop.org/software/libevdev/libevdev-1.13.1.tar.xz
        sha256: 06a77bf2ac5c993305882bc1641017f5bec1592d6d1b64787bad492ab34f2f36
        x-checker-data:
          type: anitya
          project-id: 20540
          stable-only: true
          url-template: https://www.freedesktop.org/software/libevdev/libevdev-$version.tar.xz

  # For screensaver inhibition
  - name: xdg-screensaver-shim
    buildsystem: meson
    sources:
      - type: archive
        url: https://github.com/Unrud/xdg-screensaver-shim/archive/0.0.2.tar.gz
        sha256: 0ed2a69fe6ee6cbffd2fe16f85116db737f17fb1e79bfb812d893cf15c728399

  # Forked mainline Dolphin version Project Plus uses, preloaded with sd.raw, .dol and launcher files
  - name: dolphin
    buildsystem: cmake
    sources:
      # TODO: Add x-checker-data
      # Forked mainline Dolphin version Project Plus
      - type: git
        url: https://github.com/Motobug/Project-Plus-Dolphin
        commit: 5d6587aa06640771631cca231e34b32b2e6af876

      # TODO: Add x-checker-data
      # Project Plus SD card
      - type: file
        url: https://github.com/jlambert360/FPM-AppImage/releases/download/v3.1.2/sd.tar.gz
        sha256: 389e4025ed3e0a79a1d0646dcc97bbd204fdfad371be72f913f59aa172f531fd            # This is the hash of the tar.gz file not the uncompressed

      # TODO: Add x-checker-data
      # Project Plus .dol files and icon
      - type: archive
        url: https://github.com/jlambert360/FPM-AppImage/releases/download/v3.1.2/Launcher.tar.gz
        sha256: 1b9dce2fb0eac3ad8cc809826b3b6bfd4ce30dbfc394eaa586e35dcd356fd189                  # This is the hash of the tar.gz file not the uncompressed
        dest: Launcher

      # TODO: Add x-checker-data
      # Project Plus ModPack that contains HD textures
      - type: archive
        url: https://github.com/jlambert360/PPlusReleases/releases/download/v3.1.2/Project+.v3.1.2.Modders.Pack.zip
        sha256: 291549549a88617f8f72cf549023da9af154493b75da7a8192245ed98c101ba3 # This is the hash of the zip file not the uncompressed
        dest: ModPack

      # Metadata file for Flatpak repos
      - type: file
        path: com.projectplusgame.ProjectPlus.metainfo.xml

      # The script that is run when the Flatpak is started everytime
      - type: script
        commands:
          - |
            #!/bin/sh
            # Setup Discord rich presence
            echo "Setting up Discord rich presence"
            for i in {0..9}; do
              test -S $XDG_RUNTIME_DIR/discord-ipc-$i ||
                ln -sf {app/com.discordapp.Discord,$XDG_RUNTIME_DIR}/discord-ipc-$i;
            done

            # This is a bit of a hacky way to get the sd.raw, Launcher directory, and patched Dolphin.ini/GFX.ini into the Flatpak user var directory, because the installation directory for Flatpaks is not writable and so we cannot use portable.txt + the User directory beside the binary
            echo "Make directory /var/data/FasterPPlus/Wii (~/.var/app/com.projectplusgame.ProjectPlus/data/FasterPPlus/Wii) if it doesn't exist"
            mkdir -p /var/data/FasterPPlus/Wii

            echo "Make directory /var/config/FasterPPlus/ (~/.var/app/com.projectplusgame.ProjectPlus/config/FasterPPlus) if it doesn't exist"
            mkdir -p /var/config/FasterPPlus

            # Create and set variables for the system and user SD card creation dates
            SystemSDCardCreationDate=`stat --format="%W" /app/share/ishiiruka/sys/Wii/sd.raw`
            UserSDCardCreationDate=`stat --format="%W" /var/data/FasterPPlus/Wii/sd.raw`

            # Check if the system SD card creation date is newer than the user SD card creation date (There has been an update), or there is no user SD card
            echo "Checking if there is a newer SD card version"
            if [ $SystemSDCardCreationDate -gt ${UserSDCardCreationDate:=0} ];
            then
              # Copy newer SD card to user data directory
              echo "Copying newer SD card to user data directory"
              cp /app/share/ishiiruka/sys/Wii/sd.raw /var/data/FasterPPlus/Wii/sd.raw
            else
              echo "SD card is already at latest version"
            fi

            echo "Copy /app/share/ishiiruka/sys/Wii/Launcher (/var/lib/flatpak/app/com.projectplusgame.ProjectPlus/current/active/files/share/ishiiruka/sys/Wii/Launcher) to /var/data/FasterPPlus/Wii (~/.var/app/com.projectplusgame.ProjectPlus/data/FasterPPlus/Wii) if it doesn't already exist"
            cp -nr /app/share/ishiiruka/sys/Wii/Launcher /var/data/FasterPPlus/Wii

            echo "Copy user config /app/share/ishiiruka/user/Config/Dolphin.ini and GFX.ini (/var/lib/flatpak/app/com.projectplusgame.ProjectPlus/current/active/files/share/ishiiruka/user/Config/Dolphin.ini) to /var/config/FasterPPlus/Dolphin.ini and GFX.ini (~/.var/app/com.projectplusgame.ProjectPlus/config/FasterPPlus/Dolphin.ini and GFX.ini) if they don't already exist"
            cp -n /app/share/ishiiruka/user/Config/Dolphin.ini /var/config/FasterPPlus/Dolphin.ini
            cp -n /app/share/ishiiruka/user/Config/GFX.ini /var/config/FasterPPlus/GFX.ini

            # Create and set variables for the system and user HD textures creation dates
            SystemHDTexturesCreationDate=`stat --format="%W" /app/share/ishiiruka/user/Load/Textures/RSBE01`
            UserHDTexturesCreationDate=`stat --format="%W" /var/data/FasterPPlus/Load/Textures/RSBE01`

            # Check if the system HD textures creation date is newer than the user HD textures creation date (There has been an update), or there is no user HD textures
            echo "Checking if there are newer HD textures"
            if [ $SystemHDTexturesCreationDate -gt ${UserHDTexturesCreationDate:=0} ];
            then
              # Make /var/data/FasterPPlus/Load/Textures directory if it doesn't exist
              echo "Make directory /var/data/FasterPPlus/Load/Textures (~/.var/app/com.projectplusgame.ProjectPlus/data/FasterPPlus/Load/Textures) if it doesn't exist"
              mkdir -p /var/data/FasterPPlus/Load/Textures
              # Copy newer HD textures to user data directory
              echo "Copying newer HD textures to user data directory"
              cp -r /app/share/ishiiruka/user/Load/Textures/RSBE01 /var/data/FasterPPlus/Load/Textures
            else
              echo "HD textures are already at latest version"
            fi

            # Launch ishiiruka binary
            ishiiruka "$@"
        dest-filename: ishiiruka-wrapper
    config-opts:
      # - -DLINUX_LOCAL_DEV=true # This flag makes Dolphin/Ishiiruka look for the Sys directory in the same directory as the binary and the repo we are pulling from places the Sys directory there by default (if this is turned off make sure the Sys directory is being moved to /app/share/ishiiruka/sys instead)
      - -DINSTALL_ICONS=ON
      - -DCMAKE_BUILD_TYPE=Release
      - -DENABLE_SDL=ON
      - -DENABLE_EVDEV=ON
      - -DDISTRIBUTOR=Flathub
    # post-install:
    #   - |
    #     # Install ishiiruka-wrapper script
    #     echo "Installing ishiiruka-wrapper in /app/bin/"
    #     install -D -t /app/bin/ ishiiruka-wrapper

    #     # Change exec of desktop file to launch ishiiruka-wrapper instead of ishiiruka
    #     echo "Changing exec of /app/share/applications/faster-project-plus.desktop file to launch ishiiruka-wrapper instead of ishiiruka"
    #     desktop-file-edit --set-key=Exec --set-value='/app/bin/ishiiruka-wrapper' /app/share/applications/faster-project-plus.desktop

    #     # Install metainfo file in Flatpak
    #     echo "Installing com.projectplusgame.ProjectPlus.metainfo.xml in /app/share/metainfo/"
    #     install -Dm644 -t /app/share/metainfo/ com.projectplusgame.ProjectPlus.metainfo.xml

    #     # Move /app/bin/Sys to /app/share/ishiiruka/sys (only use this without the -DLINUX_LOCAL_DEV=true flag set in config-opts)
    #     echo "Moving /app/bin/Sys to /app/share/ishiiruka/sys"
    #     mv /app/bin/Sys /app/share/ishiiruka/sys

    #     # Extract and move sd.tar.gz to /app/share/ishiiruka/sys/Wii
    #     echo "Extracting and moving sd.tar.gz to /app/share/ishiiruka/sys/Wii"
    #     tar -xf sd.tar.gz -C /app/share/ishiiruka/sys/Wii

    #     # Move Launcher directory with .dol files and icon to /app/share/ishiiruka/sys/Wii
    #     echo "Moving Launcher directory to /app/share/ishiiruka/sys/Wii"
    #     mv Launcher /app/share/ishiiruka/sys/Wii

    #     # Create Textures directory, move and rename ModPack HD textures directory to /app/share/ishiiruka/user/Load/Textures/RSBE01
    #     echo "Creating /app/share/ishiiruka/user/Load/Textures"
    #     mkdir /app/share/ishiiruka/user/Load/Textures
    #     echo "Moving and renaming HD textures directory to /app/share/ishiiruka/user/Load/Textures/RSBE01"
    #     mv 'ModPack/Full Quality HD Textures' /app/share/ishiiruka/user/Load/Textures/RSBE01







  # # The forked dolphin version Project Plus uses preloaded with the Project Plus sd.raw card and .dol Launcher files
  # - name: ishiiruka
  #   buildsystem: cmake
  #   config-opts:
  #     # - -DLINUX_LOCAL_DEV=true # This flag makes Dolphin/Ishiiruka look for the Sys directory in the same directory as the binary and the repo we are pulling from places the Sys directory there by default (if this is turned off make sure the Sys directory is being moved to /app/share/ishiiruka/sys instead)
  #     - -DINSTALL_ICONS=ON
  #     - -DCMAKE_BUILD_TYPE=Release
  #     - -DENABLE_SDL=ON
  #     - -DENABLE_EVDEV=ON
  #     - -DDISTRIBUTOR=Flathub
  #   cleanup:
  #     - /share/man
  #   sources:
  #     # Project Plus Ishiiruka/Dolphin emulator fork
  #     - type: git
  #       url: https://github.com/jlambert360/Ishiiruka.git
  #       commit: 5a745d41b9c8a2051ebe47e61247b4a4726c1573

  #     # Move wx files into source
  #     - type: shell
  #       commands:
  #         - |
  #           echo "Moving wx files into source"
  #           cp Externals/wxWidgets3/include/wx Source/Core/ -r
  #           cp Externals/wxWidgets3/wx/* Source/Core/wx/

  #     # Copy gdkconfig.h from previously installed gtk2 above to an included directory otherwise making will complain about not being able to find either gdkconfig.h or gtk/gtk.h
  #     - type: shell
  #       commands:
  #         - |
  #           echo "Copying /app/lib/gtk-2.0/include/gdkconfig.h to /app/include/gtk-2.0/gdkconfig.h"
  #           cp /app/lib/gtk-2.0/include/gdkconfig.h /app/include/gtk-2.0/gdkconfig.h

  #     # Patches Source/Core/UICommon/UICommon.cpp to check if in a Flatpak sandbox and set data, config, and cache paths correctly
  #     - type: patch
  #       path: detectflatpak.patch

  #     # Patches Data/User/Config/Dolphin.ini to set proper paths, graphics backend, and audio backend
  #     - type: patch
  #       path: dolphinini.patch

  #     # Patches Data/User/Config/GFX.ini to set FullAsyncShaderCompilation false (crashes on Linux), and Tessellation false (not supported Linux)
  #     - type: patch
  #       path: gfxini.patch

  #     # Patches CMakeLists.txt to install the icon as 256x256 as well (flatpak-builder will give error if only installed as default 48x48)
  #     - type: patch
  #       path: iconinstall.patch

  #     # Project Plus SD card
  #     - type: file
  #       url: https://github.com/jlambert360/FPM-AppImage/releases/download/v3.1.2/sd.tar.gz
  #       sha256: 389e4025ed3e0a79a1d0646dcc97bbd204fdfad371be72f913f59aa172f531fd # This is the hash of the tar.gz file not the uncompressed

  #     # Project Plus .dol files and icon
  #     - type: archive
  #       url: https://github.com/jlambert360/FPM-AppImage/releases/download/v3.1.2/Launcher.tar.gz
  #       sha256: 1b9dce2fb0eac3ad8cc809826b3b6bfd4ce30dbfc394eaa586e35dcd356fd189 # This is the hash of the tar.gz file not the uncompressed
  #       dest: Launcher

  #     # Project Plus ModPack that contains HD textures
  #     - type: archive
  #       url: https://github.com/jlambert360/PPlusReleases/releases/download/v3.1.2/Project+.v3.1.2.Modders.Pack.zip
  #       sha256: 291549549a88617f8f72cf549023da9af154493b75da7a8192245ed98c101ba3 # This is the hash of the zip file not the uncompressed
  #       dest: ModPack

  #     # Metadata file for Flatpak repos
  #     - type: file
  #       path: com.projectplusgame.ProjectPlus.metainfo.xml

  #     # The script that is run when the Flatpak is started everytime
  #     - type: script
  #       commands:
  #         - |
  #           #!/bin/sh
  #           # Setup Discord rich presence
  #           echo "Setting up Discord rich presence"
  #           for i in {0..9}; do
  #             test -S $XDG_RUNTIME_DIR/discord-ipc-$i ||
  #               ln -sf {app/com.discordapp.Discord,$XDG_RUNTIME_DIR}/discord-ipc-$i;
  #           done

  #           # This is a bit of a hacky way to get the sd.raw, Launcher directory, and patched Dolphin.ini/GFX.ini into the Flatpak user var directory, because the installation directory for Flatpaks is not writable and so we cannot use portable.txt + the User directory beside the binary
  #           echo "Make directory /var/data/FasterPPlus/Wii (~/.var/app/com.projectplusgame.ProjectPlus/data/FasterPPlus/Wii) if it doesn't exist"
  #           mkdir -p /var/data/FasterPPlus/Wii

  #           echo "Make directory /var/config/FasterPPlus/ (~/.var/app/com.projectplusgame.ProjectPlus/config/FasterPPlus) if it doesn't exist"
  #           mkdir -p /var/config/FasterPPlus

  #           # Create and set variables for the system and user SD card creation dates
  #           SystemSDCardCreationDate=`stat --format="%W" /app/share/ishiiruka/sys/Wii/sd.raw`
  #           UserSDCardCreationDate=`stat --format="%W" /var/data/FasterPPlus/Wii/sd.raw`

  #           # Check if the system SD card creation date is newer than the user SD card creation date (There has been an update), or there is no user SD card
  #           echo "Checking if there is a newer SD card version"
  #           if [ $SystemSDCardCreationDate -gt ${UserSDCardCreationDate:=0} ];
  #           then
  #             # Copy newer SD card to user data directory
  #             echo "Copying newer SD card to user data directory"
  #             cp /app/share/ishiiruka/sys/Wii/sd.raw /var/data/FasterPPlus/Wii/sd.raw
  #           else
  #             echo "SD card is already at latest version"
  #           fi

  #           echo "Copy /app/share/ishiiruka/sys/Wii/Launcher (/var/lib/flatpak/app/com.projectplusgame.ProjectPlus/current/active/files/share/ishiiruka/sys/Wii/Launcher) to /var/data/FasterPPlus/Wii (~/.var/app/com.projectplusgame.ProjectPlus/data/FasterPPlus/Wii) if it doesn't already exist"
  #           cp -nr /app/share/ishiiruka/sys/Wii/Launcher /var/data/FasterPPlus/Wii

  #           echo "Copy user config /app/share/ishiiruka/user/Config/Dolphin.ini and GFX.ini (/var/lib/flatpak/app/com.projectplusgame.ProjectPlus/current/active/files/share/ishiiruka/user/Config/Dolphin.ini) to /var/config/FasterPPlus/Dolphin.ini and GFX.ini (~/.var/app/com.projectplusgame.ProjectPlus/config/FasterPPlus/Dolphin.ini and GFX.ini) if they don't already exist"
  #           cp -n /app/share/ishiiruka/user/Config/Dolphin.ini /var/config/FasterPPlus/Dolphin.ini
  #           cp -n /app/share/ishiiruka/user/Config/GFX.ini /var/config/FasterPPlus/GFX.ini

  #           # Create and set variables for the system and user HD textures creation dates
  #           SystemHDTexturesCreationDate=`stat --format="%W" /app/share/ishiiruka/user/Load/Textures/RSBE01`
  #           UserHDTexturesCreationDate=`stat --format="%W" /var/data/FasterPPlus/Load/Textures/RSBE01`

  #           # Check if the system HD textures creation date is newer than the user HD textures creation date (There has been an update), or there is no user HD textures
  #           echo "Checking if there are newer HD textures"
  #           if [ $SystemHDTexturesCreationDate -gt ${UserHDTexturesCreationDate:=0} ];
  #           then
  #             # Make /var/data/FasterPPlus/Load/Textures directory if it doesn't exist
  #             echo "Make directory /var/data/FasterPPlus/Load/Textures (~/.var/app/com.projectplusgame.ProjectPlus/data/FasterPPlus/Load/Textures) if it doesn't exist"
  #             mkdir -p /var/data/FasterPPlus/Load/Textures
  #             # Copy newer HD textures to user data directory
  #             echo "Copying newer HD textures to user data directory"
  #             cp -r /app/share/ishiiruka/user/Load/Textures/RSBE01 /var/data/FasterPPlus/Load/Textures
  #           else
  #             echo "HD textures are already at latest version"
  #           fi

  #           # Launch ishiiruka binary
  #           ishiiruka "$@"
  #       dest-filename: ishiiruka-wrapper
  #   post-install:
  #     - |
  #       # Install ishiiruka-wrapper script
  #       echo "Installing ishiiruka-wrapper in /app/bin/"
  #       install -D -t /app/bin/ ishiiruka-wrapper

  #       # Change exec of desktop file to launch ishiiruka-wrapper instead of ishiiruka
  #       echo "Changing exec of /app/share/applications/faster-project-plus.desktop file to launch ishiiruka-wrapper instead of ishiiruka"
  #       desktop-file-edit --set-key=Exec --set-value='/app/bin/ishiiruka-wrapper' /app/share/applications/faster-project-plus.desktop

  #       # Install metainfo file in Flatpak
  #       echo "Installing com.projectplusgame.ProjectPlus.metainfo.xml in /app/share/metainfo/"
  #       install -Dm644 -t /app/share/metainfo/ com.projectplusgame.ProjectPlus.metainfo.xml

  #       # Move /app/bin/Sys to /app/share/ishiiruka/sys (only use this without the -DLINUX_LOCAL_DEV=true flag set in config-opts)
  #       echo "Moving /app/bin/Sys to /app/share/ishiiruka/sys"
  #       mv /app/bin/Sys /app/share/ishiiruka/sys

  #       # Extract and move sd.tar.gz to /app/share/ishiiruka/sys/Wii
  #       echo "Extracting and moving sd.tar.gz to /app/share/ishiiruka/sys/Wii"
  #       tar -xf sd.tar.gz -C /app/share/ishiiruka/sys/Wii

  #       # Move Launcher directory with .dol files and icon to /app/share/ishiiruka/sys/Wii
  #       echo "Moving Launcher directory to /app/share/ishiiruka/sys/Wii"
  #       mv Launcher /app/share/ishiiruka/sys/Wii

  #       # Create Textures directory, move and rename ModPack HD textures directory to /app/share/ishiiruka/user/Load/Textures/RSBE01
  #       echo "Creating /app/share/ishiiruka/user/Load/Textures"
  #       mkdir /app/share/ishiiruka/user/Load/Textures
  #       echo "Moving and renaming HD textures directory to /app/share/ishiiruka/user/Load/Textures/RSBE01"
  #       mv 'ModPack/Full Quality HD Textures' /app/share/ishiiruka/user/Load/Textures/RSBE01
